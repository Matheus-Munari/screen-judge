spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: matheusmunari0@gmail.com
    password: ${EMAIL_S_ENV}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.starttls.required: true

  application:
    name: avaliador-filmes
  datasource:
#    url: jdbc:postgresql://localhost:5432/library
    url: jdbc:h2:mem:teste
    username: sa
    password: password
#    username: postgres
#    password: postgres
    driver-class-name: org.h2.Driver
#    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    defer-datasource-initialization: true
    properties:
      hibernate:
        format.sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
  h2:
    console:
      enabled: true   # Habilita o console web do H2
      path: /h2-console  # Caminho para acessar o console
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      group-id: meu-grupo
#      settings:
#        web-allow-others: true  # Permite acesso remoto (caso necess√°rio)
api:
  security:
    token:
      secret: ${JWT_SECRET:minha-chave-secreta}

feign:
  client:
    config:
      tmdb:
        url: ${TMDB_BASE_URL}
        key: ${TMDB_API_KEY}